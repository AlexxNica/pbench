#!/usr/bin/env python

import requests
import time
import sys
import os, re
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

interval = int(sys.argv[2])
master = sys.argv[1]
os.system('scp "%s:/etc/origin/master/admin.crt" "/run/pbench/keys/admin.crt"' % (master) )
os.system('scp "%s:/etc/origin/master/admin.key" "/run/pbench/keys/admin.key"' % (master) )
counter_regexp = re.compile(".*code=\"(\d+)\".*resource=\"(\S+)\",verb=\"(\S+)\"} (\d+)")
while True:
  time_stamp = int(time.time())
  next_start = time_stamp + interval
  r = requests.get('https://%s:8443/metrics' %(master), cert=('/run/pbench/keys/admin.crt', '/run/pbench/keys/admin.key'), verify=False)
  for values in [ line.strip() for line in r.text.splitlines()]:
    if '#' not in values[0]:
      if 'apiserver_request_latencies' in values:
        data = re.sub(r"{[^{}]+}", lambda x: x.group(0).replace(",",""), values)
        name = data.split(' ')[0]
        value = data.split(' ')[1]
        print '{0},{1},{2}'.format(time_stamp, name, value)     
      if 'apiserver_request_count' in values:
        search_result = counter_regexp.search(values)
        if search_result:
          code = search_result.group(1)
          resource = search_result.group(2)
          verb = search_result.group(3)
          counter = search_result.group(4)
          key = resource + "_" + verb + "_" + str(code)
          metric_nam = values.split('{')[0]
          metric_name = metric_nam + "{resource=%s verb=%s code=%s}" %(resource,verb,code)
          metric_value = values.split('}')[1]
          print '{0},{1},{2}'.format(time_stamp, metric_name, metric_value)
      if '{' in values:
        metric_name = values.split(' ')[0]
        metric_value = values.split(' ')[1]
        print '{0},{1},{2}'.format(time_stamp, metric_name, metric_value)
  endtime = time.time()
  if endtime < next_start:
    time.sleep(next_start - endtime)
