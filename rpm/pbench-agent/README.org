* Summary
Install pre-requisites:
#+BEGIN_EXAMPLE
yum install mock rpm-build
#+END_EXAMPLE

Build and install RPMs:
#+BEGIN_EXAMPLE
cd .../pbench/rpm/pbench-agent
. ../profile
# make sure that TOP is properly set for your setup
echo $TOP
# make sure that the seqno is what you want
echo 109 > seqno     # e.g.
make
make push-test
#+END_EXAMPLE

Doing =make push-test=, instead of =make push=, will copy into the test repo
(see http://repohost.example.com/test-repo/test-rpms.html for
details).

* Debugging RPM builds

A frequent error in making the RPMs is that a file is missing from the list in
=pbench.spec=.  You might want to try to build the RPM locally to detect such
errors:
#+BEGIN_EXAMPLE
make all-but-build
cd ~/rpmbuild/SPECS
rpmbuild -bb pbench-agent.spec
#+END_EXAMPLE
Then add the missing things to the =%files= section of the .spec file and try
a full =make=.

You can split the full make into a couple of steps, using some other makefile
targets:
#+BEGIN_EXAMPLE
make rpm
make rpm-copy
#+END_EXAMPLE
The first one does the mock builds, the second copies the results RPMs to
=~/rpmbuild/RPMS=, ready for =make push=. If the =make rpm-copy= fails, it
generally means that the mock builds did not build an RPM at all. Check the
mock logs in =/var/lib/mock/<mumble>/result=.

On rare occasions, I've chrooted into the mock build root and done the
rpmbuild in there by hand to see what's going wrong, but I hope that won't be
necessary.

The seqno will keep increasing every time an RPM fails to build, so be sure to
set it to something reasonable, before pushing the final RPMs to the repo.

* Details

The makefile generates a list of files to include in the "pristine sources"
tarball.  This file list *has* to agree with the =%files= section of the spec
file: extras are not allowed.  The easiest way to ensure this is to add
patterns matching the extras into =pbench.rpm.exclude=.  Those files are then
excluded from the file list.

The next step is then =make=. That creates RPMs for RHEL6, RHEL7 and Fedora
20-22. It uses mock to do that (check =/etc/mock= for the available mock
configuration files).

To upload the new RPMs to the repos on =perf42=, do =make push= or =make
push-test=.  The first uploads it to the official release repo and remakes the
repodata; the second uploads it to the test repo: you have to copy the
=pbench-test.repo= file to a local system and enable the repo in order to test
it (see http://repohost.example.com/test-repo/test-rpms.html for
details).

* Installation of pbench-agent RPM

See http://pbench.example.com/#sec-4
